/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ambaltextiles;

import ambaltextiles.databaseWorks.DatabaseFunctions;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sridhar
 */
public class Payments extends javax.swing.JFrame {

    DatabaseFunctions df;
    DefaultTableModel dm;
    DefaultTableCellRenderer centerRenderer;

    String[] head;
    String customerName;
    private String dt, inum, part, vtype, deb, cre, bal, dy;

    Boolean flag = false, flag1 = false, flag2 = false, flag3 = false;

    /**
     * Creates new form Payments
     */
    public Payments() {
        dm = new DefaultTableModel(0, 0);

        initComponents();

        head = new String[]{"DATE", "INVOICE NUMBER", "PARTICULARS", "VOUCHER TYPE", "DEBIT", "CREDIT", "BALANCE", "OVERDUE"}; // declare header fields
        dm.setColumnIdentifiers(head);

        paymentTable.getColumnModel().getColumn(0).setPreferredWidth(85);
        paymentTable.getColumnModel().getColumn(1).setPreferredWidth(130);
        paymentTable.getColumnModel().getColumn(2).setPreferredWidth(170);
        paymentTable.getColumnModel().getColumn(3).setPreferredWidth(150);
        paymentTable.getColumnModel().getColumn(4).setPreferredWidth(100);
        paymentTable.getColumnModel().getColumn(5).setPreferredWidth(100);
        paymentTable.getColumnModel().getColumn(6).setPreferredWidth(100);
        paymentTable.getColumnModel().getColumn(7).setPreferredWidth(100);

        // formatting data in cells as center
        centerRenderer = new DefaultTableCellRenderer(); // instance of the DefaultTableCellRenderer
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER); // formatting cell element as center for horizontalAlignment
        // applying the above format to all cells in table
        paymentTable.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        paymentTable.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        paymentTable.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        paymentTable.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        paymentTable.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
        paymentTable.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
        paymentTable.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
        paymentTable.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        paymentPDF = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        paymentTable = new javax.swing.JTable();
        searchText = new javax.swing.JTextField();
        closeButton = new javax.swing.JLabel();
        searchButton = new javax.swing.JLabel();
        searchResults = new javax.swing.JComboBox<>();
        voucherType = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        bankAccountNumber = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        rupees = new javax.swing.JTextField();
        payAmount = new javax.swing.JButton();
        paymentDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        viewList = new javax.swing.JButton();
        viewByDates = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fromDate = new org.jdesktop.swingx.JXDatePicker();
        toDate = new org.jdesktop.swingx.JXDatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(47, 93, 129));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(255, 255, 255)));
        jPanel1.setForeground(new java.awt.Color(47, 93, 129));

        jLabel1.setFont(new java.awt.Font("Supercell-Magic", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PAYMENTS WINDOW");

        paymentPDF.setFont(new java.awt.Font("Supercell-Magic", 0, 14)); // NOI18N
        paymentPDF.setForeground(new java.awt.Color(255, 255, 255));
        paymentPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ambaltextiles/images/file.png"))); // NOI18N
        paymentPDF.setText("Save");
        paymentPDF.setToolTipText("Save as File");
        paymentPDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymentPDFMouseClicked(evt);
            }
        });

        paymentTable.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        paymentTable.setModel(dm);
        paymentTable.setToolTipText("Payment Details Table");
        paymentTable.setRowHeight(20);
        jScrollPane1.setViewportView(paymentTable);

        searchText.setToolTipText("Search Bar");

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ambaltextiles/images/close.png"))); // NOI18N
        closeButton.setToolTipText("Close");
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonMouseClicked(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ambaltextiles/images/search.png"))); // NOI18N
        searchButton.setToolTipText("Search Icon");
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });

        searchResults.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        searchResults.setToolTipText("Search Result Box");

        voucherType.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        voucherType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CASH", "CHEQUE", "TRANSACTION" }));
        voucherType.setToolTipText("Voucher Type");

        jLabel7.setFont(new java.awt.Font("Supercell-Magic", 0, 10)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("BANK A/C NUMBER");

        bankAccountNumber.setToolTipText("Bank Account Number");

        jLabel8.setFont(new java.awt.Font("Supercell-Magic", 0, 10)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("RUPEES");

        rupees.setToolTipText("Payment ( In Rupees )");

        payAmount.setFont(new java.awt.Font("Supercell-Magic", 0, 12)); // NOI18N
        payAmount.setText("PAY");
        payAmount.setToolTipText("Pay Button");
        payAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payAmountActionPerformed(evt);
            }
        });

        paymentDate.setToolTipText("Payment Date");

        jLabel9.setFont(new java.awt.Font("Supercell-Magic", 0, 10)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("PAYMENT DATE");

        jLabel10.setFont(new java.awt.Font("Supercell-Magic", 0, 10)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("voucher type");

        jLabel11.setFont(new java.awt.Font("Supercell-Magic", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("SEARCH BY NAME");

        viewList.setFont(new java.awt.Font("Supercell-Magic", 0, 10)); // NOI18N
        viewList.setText("VIEW");
        viewList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewListActionPerformed(evt);
            }
        });

        viewByDates.setFont(new java.awt.Font("Supercell-Magic", 0, 10)); // NOI18N
        viewByDates.setText("VIEW");
        viewByDates.setToolTipText("View List Button");
        viewByDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewByDatesActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Supercell-Magic", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("TO DATE");

        jLabel2.setFont(new java.awt.Font("Supercell-Magic", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("FROM DATE");

        fromDate.setToolTipText("From Date");

        toDate.setToolTipText("To Date");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchButton)
                                .addGap(18, 18, 18)
                                .addComponent(searchResults, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(viewList)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(closeButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 955, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(paymentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(voucherType, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(bankAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(rupees, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(payAmount)
                                .addGap(35, 35, 35)
                                .addComponent(paymentPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(viewByDates)))
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(closeButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(searchResults, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(viewList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(searchButton)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11)))))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(viewByDates)
                    .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(payAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(paymentPDF))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bankAccountNumber)
                            .addComponent(rupees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paymentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(voucherType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1000, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonMouseClicked
        // TODO add your handling code here:
        if (isDisplayable()) {
            int flag = JOptionPane.showConfirmDialog(this, "Do you want to close the window ?");
            if (flag == JOptionPane.YES_OPTION) {
                dispose(); // To close this frame
            }
        }
    }//GEN-LAST:event_closeButtonMouseClicked

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        // TODO add your handling code here:
        try {
            df = new DatabaseFunctions();
            ArrayList<String> al = df.findCustomersWithSearchLetters(searchText.getText().toUpperCase());
            String[] strs = new String[al.size() + 1];
            strs[0] = "NONE";
            int i = 1;
            for (String s : al) {
                strs[i] = s;
                i++;
            }
            searchResults.setModel(new DefaultComboBoxModel(strs));

        } catch (SQLException | ClassNotFoundException ex) {
            // don't do anything
        }
    }//GEN-LAST:event_searchButtonMouseClicked

    private void paymentPDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymentPDFMouseClicked
        // TODO add your handling code here:

        MessageFormat header = new MessageFormat("TO " + customerName);
        MessageFormat footer = new MessageFormat("THANKYOU FOR PURCHASING PRODUCTS FROM AMBAL TEXTILES");

        PrinterJob pj = PrinterJob.getPrinterJob();
        PageFormat pf = pj.defaultPage();
        Paper paper = new Paper();
        double margin = 5;
        paper.setImageableArea(margin, margin, paper.getWidth() - margin * 2, paper.getHeight() - margin * 2);
        pf.setPaper(paper);
        pj.setPrintable(paymentTable.getPrintable(JTable.PrintMode.FIT_WIDTH, header, footer), pj.validatePage(pf));
        if (pj.printDialog()) {
            try {
                pj.print();
            } catch (PrinterException e) {
            }
        }

    }//GEN-LAST:event_paymentPDFMouseClicked

    private void payAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payAmountActionPerformed
        // TODO add your handling code here:

        if (customerName.equals("NONE")) {
            flag = false;
            JOptionPane.showMessageDialog(this, "You must select anyone Customer", "Selection Error", JOptionPane.ERROR_MESSAGE);
        } else {
            flag = true;
        }

        if (paymentDate.getDate() != null) {
            flag1 = true;
        } else {
            flag1 = false;
            JOptionPane.showMessageDialog(this, "You must enter Payment Date field", "Empty Error", JOptionPane.ERROR_MESSAGE);
        }

        String particularColumn = "";
        if (voucherType.getSelectedItem().equals("CASH")) {
            bankAccountNumber.setEnabled(false);
            particularColumn = "CASH PAYMENT";
            flag2 = true;
        } else {
            if (bankAccountNumber.getText().equals("")) {
                flag2 = false;
                JOptionPane.showMessageDialog(this, "You must enter Bank Account Number field", "Empty Error", JOptionPane.ERROR_MESSAGE);
            } else {
                flag2 = true;
                bankAccountNumber.setEnabled(true);
                particularColumn = "A/C: " + bankAccountNumber.getText();
            }
        }

        if (rupees.getText().equals("")) {
            flag3 = false;
            JOptionPane.showMessageDialog(this, "You must enter Rupees field", "Empty Error", JOptionPane.ERROR_MESSAGE);
        } else {
            flag3 = true;
        }

        if (flag && flag1 && flag2 && flag3) {
            try {
                df = new DatabaseFunctions();
                // inserting sales details in payments list
                df.insertPaymentDetails(
                        customerName,
                        new SimpleDateFormat("dd/MM/yyyy").format(paymentDate.getDate()),
                        "-",
                        particularColumn,
                        voucherType.getSelectedItem().toString(),
                        "0",
                        rupees.getText());
                tableDatasRecovery();
            } catch (SQLException | ClassNotFoundException ex) {
                // don't do anything
            }
        }

    }//GEN-LAST:event_payAmountActionPerformed

    private void viewListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewListActionPerformed
        // TODO add your handling code here:
        tableDatasRecovery();
    }//GEN-LAST:event_viewListActionPerformed

    private void viewByDatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewByDatesActionPerformed
        // TODO add your handling code here:
        datasRecoveryByDates();
    }//GEN-LAST:event_viewByDatesActionPerformed

    private void tableDatasRecovery() {
        try {
            df = new DatabaseFunctions();
            customerName = searchResults.getSelectedItem().toString();

            while (dm.getRowCount() > 0) {
                dm.removeRow(0);
            }

            if (!customerName.equals("NONE")) {
                ArrayList<Payments> p;
                p = df.findPaymentDetails(customerName);
                p.forEach((pay) -> {
                    dm.addRow(new Object[]{
                        pay.getDt(),
                        pay.getInum(),
                        pay.getPart(),
                        pay.getVtype(),
                        pay.getDeb(),
                        pay.getCre(),
                        pay.getBal(),
                        pay.getDy()
                    });
                });
            }
        } catch (SQLException | ClassNotFoundException ex) {
            // don't do anything
        }
    }

    private void datasRecoveryByDates() {
        try {
            df = new DatabaseFunctions();
            customerName = searchResults.getSelectedItem().toString();

            while (dm.getRowCount() > 0) {
                dm.removeRow(0);
            }

            if (!customerName.equals("NONE") && fromDate.getDate() != null && toDate.getDate() != null) {
                ArrayList<Payments> p;
                p = df.findPaymentDetailsByDates(customerName,
                        new SimpleDateFormat("dd/MM/yyyy").format(fromDate.getDate()),
                        new SimpleDateFormat("dd/MM/yyyy").format(toDate.getDate()));
                p.forEach((pay) -> {
                    dm.addRow(new Object[]{
                        pay.getDt(),
                        pay.getInum(),
                        pay.getPart(),
                        pay.getVtype(),
                        pay.getDeb(),
                        pay.getCre(),
                        pay.getBal(),
                        pay.getDy()
                    });
                });
            }
        } catch (SQLException | ClassNotFoundException ex) {
            // don't do anything
        }
    }

    public String getDt() {
        return dt;
    }

    public void setDt(String dt) {
        this.dt = dt;
    }

    public String getInum() {
        return inum;
    }

    public void setInum(String inum) {
        this.inum = inum;
    }

    public String getPart() {
        return part;
    }

    public void setPart(String part) {
        this.part = part;
    }

    public String getVtype() {
        return vtype;
    }

    public void setVtype(String vtype) {
        this.vtype = vtype;
    }

    public String getDeb() {
        return deb;
    }

    public void setDeb(String deb) {
        this.deb = deb;
    }

    public String getCre() {
        return cre;
    }

    public void setCre(String cre) {
        this.cre = cre;
    }

    public String getBal() {
        return bal;
    }

    public void setBal(String bal) {
        this.bal = bal;
    }

    public String getDy() {
        return dy;
    }

    public void setDy(String dy) {
        this.dy = dy;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Payments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bankAccountNumber;
    private javax.swing.JLabel closeButton;
    private org.jdesktop.swingx.JXDatePicker fromDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton payAmount;
    private org.jdesktop.swingx.JXDatePicker paymentDate;
    private javax.swing.JLabel paymentPDF;
    private javax.swing.JTable paymentTable;
    private javax.swing.JTextField rupees;
    private javax.swing.JLabel searchButton;
    private javax.swing.JComboBox<String> searchResults;
    private javax.swing.JTextField searchText;
    private org.jdesktop.swingx.JXDatePicker toDate;
    private javax.swing.JButton viewByDates;
    private javax.swing.JButton viewList;
    private javax.swing.JComboBox<String> voucherType;
    // End of variables declaration//GEN-END:variables

}
